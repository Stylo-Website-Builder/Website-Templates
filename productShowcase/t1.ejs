<!DOCTYPE html>
<html lang="en" style="scroll-behavior: smooth;">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= websiteName %></title>
    <link rel="icon" type="image/png" href="https://res.cloudinary.com/dn5occ53n/image/upload/v1738491116/transparent-favicon_dsgzwb.png">
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="font-sans bg-gray-50">
    <!-- Header -->
    <header class="fixed w-full z-30 bg-white/80 backdrop-blur-md shadow-sm">
        <div class="max-w-7xl mx-auto px-4 py-2">
            <div class="flex justify-between items-center">
                <% if (header.logoType === "text") { %>
                    <div class="text-2xl font-bold text-gray-800 py-2">
                        <%= header.logoText %>
                    </div>
                <% } else { %>
                    <img src="<%= header.logoImage %>" alt="Logo" class="h-[48px]">
                <% } %>
                <nav class="hidden sm:flex space-x-6">
                    <% header.items.forEach(item => { %>
                        <a href="#<%= item.id %>" class="text-gray-600 hover:text-primary-500 transition-colors">
                            <%= item.label %>
                        </a>
                    <% }); %>
                </nav>
            </div>
        </div>
    </header>

    <!-- Hero Section -->
    <section id="home" class="pt-32 pb-20">
        <div class="max-w-7xl mx-auto px-4">
            <div class="grid md:grid-cols-2 gap-12 items-center">
                <div class="space-y-6">
                    <h1 class="text-5xl font-bold text-gray-800"><%= hero.title %></h1>
                    <p class="text-xl text-gray-600"><%= hero.subtitle %></p>
                    <div class="flex space-x-4">
                        <a href="#contact" class="px-8 py-4 border-2 border-primary-500 text-primary-500 rounded-xl hover:bg-primary-50 transition-colors">
                            <%= hero.primaryCta %>
                        </a>
                        <a href="#details" class="px-8 py-4 border-2 border-primary-500 text-primary-500 rounded-xl hover:bg-primary-50 transition-colors">
                            <%= hero.secondaryCta %>
                        </a>
                    </div>
                </div>
                <div class="relative">
                    <img src="<%= hero.productImage %>" alt="Product Image" class="w-full max-h-[600px] object-cover rounded-2xl">
                    <div class="absolute -bottom-8 -right-8 w-32 h-32 bg-primary-100 rounded-full blur-2xl opacity-50"></div>
                </div>
            </div>
        </div>
    </section>

    <!-- Product Details -->
    <!-- Product Details -->
<section id="details" class="py-20 bg-white">
    <div class="max-w-7xl mx-auto px-4">
        <div class="flex flex-col-reverse md:flex-row gap-12">
            <div class="grid grid-cols-2 gap-6 h-fit flex-1">
                <% details.gallery.forEach(image => { %>
                    <img src="<%= image %>" alt="Product Gallery" class="w-full h-48 object-cover rounded-xl shadow-md">
                <% }); %>
            </div>
            <div class="flex-1">
                <div class="flex space-x-4 mb-8 border-b">
                    <button
                        class="pb-4 text-lg font-semibold text-primary-500 border-b-2 border-primary-500 tab-button"
                        data-tab="description"
                    >
                        Description
                    </button>
                    <button
                        class="pb-4 text-lg font-semibold text-gray-500 tab-button"
                        data-tab="specifications"
                    >
                        Specifications
                    </button>
                </div>

                <div id="description-content" class="tab-content active opacity-100">
                    <div class="mb-8">
                        <p class="text-gray-600 mb-6"><%= details.description %></p>
                        <div class="grid md:grid-cols-2 gap-4 mb-10">
                            <% details.keyFeatures.forEach(feature => { %>
                                <div class="flex items-center space-x-3">
                                    <span class="text-primary-500">✓</span>
                                    <span><%= feature %></span>
                                </div>
                            <% }); %>
                        </div>
                        <a href="#contact" class="inline-block px-8 py-4 border-2 border-primary-500 text-primary-500 rounded-xl hover:bg-primary-50 transition-colors">
                            <%= details.descriptionbtnText %>
                        </a>
                    </div>
                </div>

                <div id="specifications-content" class="tab-content hidden opacity-0">
                    <div class="space-y-4">
                        <% if (details.specifications) { %>
                            <% 
                            // Convert Map to Array of entries if it's a Map
                            const specEntries = details.specifications instanceof Map ? 
                                Array.from(details.specifications.entries()) : 
                                Object.entries(details.specifications);
                            %>
                            <% specEntries.forEach(([key, value]) => { %>
                                <div class="flex justify-between items-center border-b border-gray-200 pb-3">
                                    <span class="text-gray-700 font-medium"><%= key %></span>
                                    <span class="text-gray-600"><%= value %></span>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    .tab-content {
        transition: opacity 0.3s ease-in-out;
    }
    
    .tab-content.active {
        display: block;
        opacity: 1;
    }
    
    .tab-content.hidden {
        display: none;
        opacity: 0;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const tabButtons = document.querySelectorAll('.tab-button');
        const tabContents = document.querySelectorAll('.tab-content');
        
        function switchTab(tabId) {
            // Update button styles
            tabButtons.forEach(button => {
                if (button.dataset.tab === tabId) {
                    button.classList.add('text-primary-500', 'border-b-2', 'border-primary-500');
                    button.classList.remove('text-gray-500');
                } else {
                    button.classList.remove('text-primary-500', 'border-b-2', 'border-primary-500');
                    button.classList.add('text-gray-500');
                }
            });
            
            // Update content visibility with animation
            tabContents.forEach(content => {
                if (content.id === `${tabId}-content`) {
                    content.classList.remove('hidden');
                    setTimeout(() => {
                        content.classList.add('active');
                        content.classList.remove('opacity-0');
                    }, 50);
                } else {
                    content.classList.remove('active');
                    content.classList.add('opacity-0');
                    setTimeout(() => {
                        content.classList.add('hidden');
                    }, 300);
                }
            });
        }
        
        tabButtons.forEach(button => {
            button.addEventListener('click', () => {
                const tabId = button.dataset.tab;
                switchTab(tabId);
            });
        });
    });
</script>

    <!-- Testimonials -->
    <section id="testimonials" class="px-5 py-20">
        <h2 class="text-4xl font-bold text-center mb-12 text-gray-800"><%= testimonials.title %></h2>
        <div class="flex flex-col sm:flex-row mt-10 gap-5">
            <% testimonials.items.forEach(review => { %>
                <div class="bg-white p-6 rounded-xl shadow-lg mb-6">
                    <div class="flex items-center mb-4">
                        <img src="<%= review.imageUrl %>" alt="<%= review.name %>" class="w-12 h-12 rounded-full object-cover mr-4">
                        <div>
                            <div class="font-medium"><%= review.name %></div>
                            <div class="text-yellow-500 text-sm mt-1"><%= "★".repeat(review.rating) %></div>
                        </div>
                    </div>
                    <p class="text-gray-600"><%= review.comment %></p>
                </div>
            <% }); %>
        </div>
    </section>

    <!-- Contact Form -->
    <section id="contact" class="py-20">
        <div id="popupMessage" class="fixed top-24 right-4 bg-green-500 text-white px-6 py-3 rounded-lg hidden transition-all duration-300 transform scale-90">
            <span id="popupText"></span>
        </div>
        <div class="max-w-3xl mx-auto px-4">
            <div class="bg-white rounded-2xl p-12 shadow-lg">
                <h2 class="text-4xl font-bold text-center mb-12 text-gray-800"><%= contact.title %></h2>
                <form id="contactForm" class="space-y-6">
                    <div class="grid md:grid-cols-2 gap-6">
                        <div>
                            <input type="text" name="name" id="name" placeholder="Name" 
                                class="w-full px-6 py-4 bg-gray-50 rounded-xl border focus:outline-none focus:ring-2 focus:ring-primary-500">
                            <p class="text-red-500 text-sm mt-1 hidden" id="nameError"></p>
                        </div>
                        <div>
                            <input type="email" name="email" id="email" placeholder="Email" 
                                class="w-full px-6 py-4 bg-gray-50 rounded-xl border focus:outline-none focus:ring-2 focus:ring-primary-500">
                            <p class="text-red-500 text-sm mt-1 hidden" id="emailError"></p>
                        </div>
                    </div>
                    <div>
                        <input type="text" name="contactNo" id="contactNo" placeholder="Contact No" 
                            class="w-full px-6 py-4 bg-gray-50 rounded-xl border focus:outline-none focus:ring-2 focus:ring-primary-500">
                        <p class="text-red-500 text-sm mt-1 hidden" id="contactError"></p>
                    </div>
                    <div>
                        <textarea name="message" id="message" placeholder="Your Message" 
                            class="w-full px-6 py-4 bg-gray-50 rounded-xl border focus:outline-none focus:ring-2 focus:ring-primary-500" 
                            rows="4"></textarea>
                        <p class="text-red-500 text-sm mt-1 hidden" id="messageError"></p>
                    </div>
                    <button type="submit" 
                        class="w-full py-4 bg-primary-500 text-black border border-gray-200 rounded-xl hover:bg-primary-600 transition-colors">
                        Send Message
                    </button>
                </form>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="bg-white py-8">
        <p class="text-center text-gray-600"><%= footer.copyright %></p>
    </footer>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("contactForm");
            const popupMessage = document.getElementById("popupMessage");
            const popupText = document.getElementById("popupText");
            const contactNo = document.getElementById("contactNo");
            const submitButton = form.querySelector("button[type='submit']");

            function showPopup(message, type = "success") {
                popupText.textContent = message;
                popupMessage.classList.remove("hidden", "bg-green-500", "bg-red-500", "scale-90");
                popupMessage.classList.add(type === "error" ? "bg-red-500" : "bg-green-500", "scale-100");

                setTimeout(() => {
                    popupMessage.classList.add("hidden", "scale-90");
                }, 3000);
            }

            function validateForm() {
                let isValid = true;

                const name = document.getElementById("name");
                const email = document.getElementById("email");
                const message = document.getElementById("message");

                const nameError = document.getElementById("nameError");
                const emailError = document.getElementById("emailError");
                const contactError = document.getElementById("contactError");
                const messageError = document.getElementById("messageError");

                // Reset errors
                [nameError, emailError, contactError, messageError].forEach(error => error.classList.add("hidden"));

                if (name.value.trim() === "") {
                    nameError.textContent = "Name is required.";
                    nameError.classList.remove("hidden");
                    isValid = false;
                }

                if (email.value.trim() === "") {
                    emailError.textContent = "Email is required.";
                    emailError.classList.remove("hidden");
                    isValid = false;
                } else if (!/\S+@\S+\.\S+/.test(email.value)) {
                    emailError.textContent = "Enter a valid email.";
                    emailError.classList.remove("hidden");
                    isValid = false;
                }

                if (contactNo.value.trim() === "") {
                    contactError.textContent = "Mobile number is required.";
                    contactError.classList.remove("hidden");
                    isValid = false;
                } else if (!/^\d{10}$/.test(contactNo.value)) {
                    contactError.textContent = "Mobile number must be exactly 10 digits.";
                    contactError.classList.remove("hidden");
                    isValid = false;
                }

                if (message.value.trim() === "") {
                    messageError.textContent = "Message is required.";
                    messageError.classList.remove("hidden");
                    isValid = false;
                }

                return isValid;
            }

            form.addEventListener("submit", async function (event) {
                event.preventDefault();

                if (!validateForm()) {
                    return;
                }

                submitButton.textContent = "Sending...";
                submitButton.disabled = true;

                const formData = new FormData(form);
                const jsonObject = {};
                formData.forEach((value, key) => {
                    jsonObject[key] = value;
                });

                const url = "https://stylo-website-builder.onrender.com/api/v1/websites/send-email/<%= type %>/<%= _id %>";

                try {
                    const response = await fetch(url, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(jsonObject),
                    });

                    if (response.ok) {
                        showPopup("Message sent successfully!", "success");
                        form.reset();
                    } else {
                        showPopup("Failed to send message. Try again.", "error");
                    }
                } catch (error) {
                    showPopup("Error occurred. Please try again.", "error");
                } finally {
                    submitButton.textContent = "Send Message";
                    submitButton.disabled = false;
                }
            });

            // Prevent non-numeric input and limit to 10 digits
            contactNo.addEventListener("input", function () {
                this.value = this.value.replace(/\D/g, "").slice(0, 10);
            });

            // Clear error messages on input
            document.querySelectorAll("input, textarea").forEach(input => {
                input.addEventListener("input", function () {
                    const errorElement = this.nextElementSibling;
                    if (errorElement) {
                        errorElement.classList.add("hidden");
                    }
                });
            });
        });
    </script>
</body>
</html>
